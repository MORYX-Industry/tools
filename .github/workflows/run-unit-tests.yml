name: UnitTests

on:
  workflow_call:
    inputs:
      dotnet_sdk_version:
        required: true
        type: string
      npm_package_source:
        required: false
        type: string
    secrets:
      npm_auth_token:
        required: false
      myget_auth_token:
        required: false
      myget_user:
        required: false
      myget_pass:
        required: false

jobs:
  UnitTests:
    runs-on: ubuntu-latest
    concurrency:
      group: test-stage
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        id: cache-nuget
        with:
          path:  ${{ github.workspace }}/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: 🔧 Setup nuget
        uses: nuget/setup-nuget@v1

      - name: 🔧 Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet_sdk_version }}

      - name: 🗝️ Authenticate npm registry
        run: npm config set ${{ inputs.npm_package_source }}:_authToken ${{ secrets.npm_auth_token }}
        if: inputs.npm_package_source != ''

      - name: "🗝️ Authenticate MyGet"
        uses: moryx-industry/nuget-setapikey@main
        with:
          sources-file: './myget.feeds'
          api-key: ${{ secrets.myget_auth_token }}
          registry-user: ${{ secrets.myget_user }}
          registry-pass: ${{ secrets.myget_pass }}

      - name: ♺ Execute nuget restore
        run: nuget restore
          
      - name: 🧰 Setup BuildToolkit
        uses: moryx-industry/setup-buildtoolkit@main

      - name: 🧪 Run tests 
        run: |
          .\unit-tests.ps1
        shell: pwsh

      - name: ⬆️ Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: src/Tests/**/TestResults/**/coverage.cobertura.xml
          retention-days: 1
          if-no-files-found: error
